version: '3.7'

services:
  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.swarm=true"
      - "--log.level=DEBUG"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=sylvainrougie@orange.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-certificates:/acme.json
    deploy:
      placement:
        constraints:
          - node.role == manager

  web-hippo:
    image: sipixer/hippo_front:latest
    environment:
      - API_PORT=3000
      - API_ADDRESS=localhost
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.web-hippo.rule=Host(`hippo.mangoustes.ynov`)
        - traefik.http.services.web-hippo.loadbalancer.server.port=80
        - traefik.http.routers.web-hippo.entrypoints=web,websecure
        - traefik.http.routers.web-hippo.tls=true
        - traefik.http.routers.web-hippo.tls.certresolver=myresolver

  back-hippo:
    image: sipixer/hippo_back:latest
    environment:
      - PG_USER=myuser
      - PG_PASS=mypassword
      - PG_DB=mydatabase
      - PG_HOST=db
      - API_PORT=3000
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.back-hippo.rule=Host(`api.hippo.mangoustes.ynov`)
        - traefik.http.services.back-hippo.loadbalancer.server.port=3000
        - traefik.http.routers.back-hippo.entrypoints=web,websecure
        - traefik.http.routers.back-hippo.tls=true
        - traefik.http.routers.back-hippo.tls.certresolver=myresolver

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: myuser # Nom d'utilisateur pour la base de données
      POSTGRES_PASSWORD: mypassword # Mot de passe pour cet utilisateur
      POSTGRES_DB: mydatabase # Nom de la base de données à créer
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volumes pour persister les données
    ports:
      - "5432:5432"

networks:
  default:
    driver: overlay

volumes:
  traefik-certificates:
  postgres_data:
